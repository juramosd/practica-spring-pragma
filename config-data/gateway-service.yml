server:
  port: 8080

eureka:
  instance:
    hostname: localhost
    prefer-ip-address: true
    instace-id: ${spring.application.name}-${random.uuid}
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://localhost:8099/eureka/

spring:
  cloud:
    loadbalancer:
      ribbon:
        enabled: false
    gateway:
     default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
      discovery:
        locator:
          enabled: true
      routes:
        - id: customer-service
          uri: lb://customer-service
          predicates:
            - Path=/customers/**
          #filters:
          #- name: CustomerCircuitBreaker
          #  args:
          #    name: customerCircuitBreaker
          #    fallbackUri: forward:/customer-fallback
        - id: photo-service
          uri: lb://photo-service
          predicates:
            - Path=/photos/**
          #filters:
          #- name: PhotoCircuitBreaker
          #  args:
          #    name: photoCircuitBreaker
          #    fallbackUri: forward:/photo-fallback

        
